% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/legacy2.R
\name{analyzeLegacyTileseqCounts2}
\alias{analyzeLegacyTileseqCounts2}
\title{Analyze tileseq counts 2}
\usage{
analyzeLegacyTileseqCounts2(countfile, regionfile, outdir, logger = NULL,
  inverseAssay = FALSE, pseudoObservations = 2,
  conservativeMode = TRUE, ns_filt_num_sd = 3,
  select_filt_num_sd = 3, select_filt = T,
  min_nonselect_counts = -Inf, stop_cutoff = NULL, sdCutoff = 0.3,
  sdCutoffAlt = 1, min_variants_to_choose_median = 10)
}
\arguments{
\item{countfile}{the path to the "rawData.txt" file produced by the legacy pipeline.}

\item{regionfile}{the path to a csv file describing the mutagenesis regions. Must contain columns 
'region', start', 'end', 'syn', 'stop', i.e. the region id, the start position, end position, and
and optional synonymous and stopm mean overrides.}

\item{outdir}{path to desired output directory}

\item{logger}{a yogilogger object to be used for logging (or NULL for simple printing)}

\item{inverseAssay}{a boolean flag to indicate that the experiment was done with an inverse assay
i.e. protein function leading to decreased fitness. Defaults to FALSE}

\item{pseudoObservations}{The number of pseudoObservations to use for the Baldi&Long regularization.
Defaults to 2.}

\item{conservativeMode}{Boolean flag. When turned on, pseudoObservations are not counted towards 
standard error and the first round of regularization uses pessimistic error estimates.}

\item{ns_filt_num_sd}{Integer (between -3 and 3 suggested, other values unlikely to be meaningful).
The number of standard deviations to be used in the nonselect filter (aka Song's filter, aka sequencing error filter).
Variant's counts less than this number of standard deviations from the control mean 
will be termed "likely 0" and filtered out. 3 filters out the most data (anything that could be 0),
and -3 filters out the least data (anything that is definitely 0). Default is 3.}

\item{select_filt_num_sd}{Integer (between -3 and 3 suggested, other values unlikely to be meaningful).
The number of standard deviations to be used in the select filter (aka bottleneck filter, aka backwards ORF filter).
Variant's counts less than this number of standard deviations from the control mean 
will be termed "likely 0" and filtered out. 3 filters out the most data (anything that could be 0),
and -3 filters out the least data (anything that is definitely 0). Default is 3. This parameter
is ignored if select_filt is FALSE.}

\item{select_filt}{Boolean flag. Indicates whether to use the select filter (aka bottleneck filter).
Default is TRUE.}

\item{min_nonselect_counts}{Numeric. Nonselective counts filter cutoff (in reads/million).
Filter all variants below this count out of the entire data set. Default is -Inf.}

\item{stop_cutoff}{Integer. The amino position above which to not include stop mutations in calculation
of the stop median for scaling fitness scores. Default is NULL, in which case the length of the
gene is chosen. This script outputs a plot in outdir to help choose this parameter in
future runs.}

\item{sdCutoff}{Numeric. The standard deviation cutoff to use to choose high
confidence variants to calculate stop and syn medians for fitness score scaling.
Default is 0.3.}

\item{sdCutoffAlt}{Numeric. Should be higher than sdCutoff. The alternative standard deviation cutoff to use to choose high
confidence variants to calculate stop and syn medians if not enough variants pass the
initial cutoff sdCutoff.
Default is 1.}

\item{min_variants_to_choose_median}{Integer. The minimum number of variants that must pass
pass the quality filters in order to calculate stop and syn medians. Note that
if this amount is not met after the alternative filter, then no filter will be used.}
}
\value{
nothing. output is written to various files in the output directory
}
\description{
This analysis function performs the following steps for each mutagenesis region (see 
 details for the new changes in this version):
 \enumerate {
 
\item 1. Construction of HGVS variant descriptor strings.
\item 2. Collapsing equivalent codons into amino acic change counts.
\item 3. Error regularization at the level of pre- and post-selection counts.
\item 4. Quality-based filtering filtering based on "Song's rule". AND BOTTLENECK FILTER
\item 5. Fitness score calculation and error propagation.
\item 6. Secondary error regularization at the level of fitness scores.
\item 7. Determination of synonymous and nonsense medians and re-scaling of fitness scores.
\item 8. Flooring of negative scores and adjustment of associated error.
\item 9. Output in MaveDB format.
}
}
\details{
New changes in this version ("2"):
\enumerate {
\item 1. bottleneck and song's filter now filter out variants that are 0 in EITHER replicate (not the mean of the replicates)
\item 2. add a plot for choosing position cutoff for calculating the median stop log(phi) 
\item 3. multiple plots for visualization of data
\item 4. can now turn off bottleneck (Select) filter
\item 5. option to change the number of SDs to use in bottleneck and Song's filter (more or less conservative)
\item 6. Include option to use a stop cutoff for calculating stop median
\item 7. Can customize how many variants must pass filters for calculating medians
\item 8. Can customize the quality threshhold for median calculation (and an alternative one in the case not enough variants pass the first one)
\item 9. Added a nonselect count filter, remove any variants that are not abundant enough in nonselect condition
}
}
