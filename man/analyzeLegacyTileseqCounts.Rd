% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/legacy.R
\name{analyzeLegacyTileseqCounts}
\alias{analyzeLegacyTileseqCounts}
\title{analyze tileseq counts from legacy pipeline}
\usage{
analyzeLegacyTileseqCounts(countfile, regionfile, outdir, logger = NULL)
}
\arguments{
\item{countfile}{the path to the "rawData.txt" file produced by the legacy pipeline.}

\item{regionfile}{the path to a csv file describing the mutagenesis regions. Must contain columns 
'region', start', 'end', 'syn', 'stop', i.e. the region id, the start position, end position, and
and optional synonymous and stopm mean overrides.}

\item{outdir}{path to desired output directory}

\item{logger}{a yogilogger object to be used for logging}
}
\value{
nothing. output is written to various files in the output directory
}
\description{
This analysis function performs the following steps for each mutagenesis region:
1. Construction of HGVS variant descriptor strings.
2. Collapsing equivalent codons into amino acic change counts.
3. Error regularization at the level of pre- and post-selection counts.
4. Quality-based filtering filtering based on "Song's rule".
5. Fitness score calculation and error propagation.
6. Secondary error regularization at the level of fitness scores.
7. Determination of synonymous and nonsense medians and re-scaling of fitness scores.
8. Flooring of negative scores and adjustment of associated error.
9. Output in MaveDB format.
}
